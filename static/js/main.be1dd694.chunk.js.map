{"version":3,"sources":["Header.jsx","PersonalInfo.jsx","Services.jsx","Notes.jsx","Main.jsx","Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","PersonalInfo","type","name","required","value","min","id","Services","Notes","Main","Footer","class","onclick","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+MAGaA,G,KAAS,SAATA,IACX,OACE,kBAACA,EAAD,KACE,yBAAKC,UAAU,UACb,wCCLKC,EAAe,WAC1B,OACE,yBAAKD,UAAU,gBACb,6CACA,0CACc,2BAAOE,KAAK,OAAOC,KAAK,YAAYC,UAAQ,KAE1D,yCACa,2BAAOF,KAAK,OAAOC,KAAK,YAAYC,UAAQ,KAEzD,6CACiB,2BAAOF,KAAK,SAASC,KAAK,SAASC,UAAQ,KAE5D,wCACY,2BAAOF,KAAK,OAAOC,KAAK,WAAWC,UAAQ,KAGvD,qCAEE,2BAAOF,KAAK,QAAQC,KAAK,SAASE,MAAM,OAAOD,UAAQ,IAFzD,QAGE,2BAAOF,KAAK,QAAQC,KAAK,SAASE,MAAM,SAASD,UAAQ,IAH3D,SAKE,2BAAOF,KAAK,QAAQC,KAAK,SAASC,UAAQ,IAL5C,SAQA,qCACS,2BAAOF,KAAK,QAAQE,UAAQ,EAACD,KAAK,WAE3C,uCAEE,2BAAOD,KAAK,WAAWI,IAAI,IAAIH,KAAK,WAAWI,GAAG,OAAOH,UAAQ,KAEnE,+CAEE,2BACEF,KAAK,WACLI,IAAI,IACJH,KAAK,mBACLI,GAAG,cACHH,UAAQ,OCvCLI,G,KAAW,WACtB,OACE,yBAAKR,UAAU,YACb,gDACA,2BACE,2BAAOE,KAAK,WAAWG,MAAM,WAAWF,KAAK,aAD/C,aAGA,2BACE,2BACED,KAAK,WACLG,MAAM,mBACNF,KAAK,qBACJ,IALL,oBAQA,2BACE,2BACED,KAAK,WACLG,MAAM,yBACNF,KAAK,2BACJ,IALL,0BAQA,2BACE,2BAAOD,KAAK,WAAWG,MAAM,aAAaF,KAAK,eAAgB,IADjE,cAIA,2BACE,2BAAOD,KAAK,WAAWG,MAAM,iBAAiBF,KAAK,mBAAoB,IADzE,qBC3BOM,EAAQ,WACnB,OACE,yBAAKT,UAAU,SACb,qCACA,8BAAUK,MAAM,QAAQF,KAAK,SAC1B,OCAIO,EAAO,WAClB,OACE,yBAAKV,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCTOW,EAAS,WACpB,OACE,6BACE,gCACE,2BACEC,MAAM,YACNV,KAAK,SACLG,MAAM,WACNQ,QAAQ,mBCOHC,MAZf,WACE,OACE,6BACE,8BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCAYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.be1dd694.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <Header>\r\n      <div className=\"header\">\r\n        <h1>Form</h1>\r\n      </div>\r\n    </Header>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nexport const PersonalInfo = () => {\r\n  return (\r\n    <div className=\"personalInfo\">\r\n      <h3>PERSONAL INFO</h3>\r\n      <p>\r\n        first name: <input type=\"text\" name=\"firstname\" required />\r\n      </p>\r\n      <p>\r\n        last name: <input type=\"text\" name=\"lasttname\" required />\r\n      </p>\r\n      <p>\r\n        mobile number: <input type=\"number\" name=\"number\" required />\r\n      </p>\r\n      <p>\r\n        birthday: <input type=\"date\" name=\"birthday\" required />\r\n      </p>\r\n\r\n      <p>\r\n        gender:\r\n        <input type=\"radio\" name=\"gender\" value=\"male\" required /> male\r\n        <input type=\"radio\" name=\"gender\" value=\"female\" required />\r\n        female\r\n        <input type=\"radio\" name=\"gender\" required />\r\n        other\r\n      </p>\r\n      <p>\r\n        email: <input type=\"email\" required name=\"email\" />\r\n      </p>\r\n      <p>\r\n        password:\r\n        <input type=\"password\" min=\"8\" name=\"password\" id=\"pass\" required />\r\n      </p>\r\n      <p>\r\n        confirm password:\r\n        <input\r\n          type=\"password\"\r\n          min=\"8\"\r\n          name=\"confirm password\"\r\n          id=\"confirmPass\"\r\n          required\r\n        />\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nexport const Services = () => {\r\n  return (\r\n    <div className=\"services\">\r\n      <h3>service to avail</h3>\r\n      <p>\r\n        <input type=\"checkbox\" value=\"webinars\" name=\"webinars\" /> webinars\r\n      </p>\r\n      <p>\r\n        <input\r\n          type=\"checkbox\"\r\n          value=\"training session\"\r\n          name=\"training session\"\r\n        />{\" \"}\r\n        training session\r\n      </p>\r\n      <p>\r\n        <input\r\n          type=\"checkbox\"\r\n          value=\"programming challenges\"\r\n          name=\"programming challenges\"\r\n        />{\" \"}\r\n        programming challenges\r\n      </p>\r\n      <p>\r\n        <input type=\"checkbox\" value=\"newsletter\" name=\"newsletter\" />{\" \"}\r\n        newsletter\r\n      </p>\r\n      <p>\r\n        <input type=\"checkbox\" value=\"tech magazines\" name=\"tech magazines\" />{\" \"}\r\n        tech magazines\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nexport const Notes = () => {\r\n  return (\r\n    <div className=\"notes\">\r\n      <h3>Notes</h3>\r\n      <textarea value=\"notes\" name=\"notes\">\r\n        {\" \"}\r\n      </textarea>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { PersonalInfo } from \"./PersonalInfo\";\r\nimport { Services } from \"./Services\";\r\nimport { Notes } from \"./Notes\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport const Main = () => {\r\n  return (\r\n    <div className=\"flex\">\r\n      <PersonalInfo />\r\n      <Services />\r\n      <Notes />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <div>\r\n      <footer>\r\n        <input\r\n          class=\"footerBtn\"\r\n          type=\"submit\"\r\n          value=\"register\"\r\n          onclick=\"checkForm()\"\r\n        />\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { Header } from \"./Header\";\nimport { Main } from \"./Main\";\nimport { Footer } from \"./Footer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <form>\n        <Header />\n        <Main />\n        <Footer />\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}